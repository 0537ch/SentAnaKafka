version: '3.8'

services:
  # Kafka service (using KRaft mode - no Zookeeper needed)
  kafka:
    image: apache/kafka:4.1.0
    container_name: sentana-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - sentana-network

  # TimescaleDB service
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: sentana-timescaledb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: sentana
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - sentana-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  timescaledb_data:

networks:
  sentana-network:
    driver: bridge